---
title: "EDS212 2b Exercises"
format: html
editor_options: 
  chunk_output_type: console
---


```{r}
# load packages ----
library(tidyverse)


# define function ----
Eq1 <- function(x) {
  3 * x^2 + 4
}

# create a data frame with range of values to evaluate our fx across ----
my_data_range <- data.frame(x = c(1, 100))

# plot our function as a continuous curve over our specified range of values in our df----

ggplot(data = my_data_range, aes(x = x)) + 
  geom_function(fun = Eq1)

```

```{r}
# define function
Eq2 <- function(x) {
  2.4 - 5 * x^3 + 2.1 * x^2
}

# create a data frame with range of values to evaluate our fx across 
my_data_range <- data.frame(x = c(-50, 50))

#plot our function over specified range of values 

ggplot(data = my_data_range, aes(x = x)) + 
  geom_function(fun = Eq2)

```

```{r}
# create function C(t) ----
Ct <- function(t) {
  t^3
}

# find the deriv of C(t) ----
dc_dt <- D(expr = expression(t^3), name = "t")
dc_dt

# store deriv as a function ----
dc_dt_fun <- function(t) {
  3 * t^2
}
# df of values ----
my_data_range <- data.frame(t = c(-5, 5))

#plot function ----
ggplot(data = my_data_range, aes(x = t)) + 
  geom_function(fun = Ct, color = "red") + geom_function(fun = dc_dt_fun, color = "blue")

```

```{r}
# create the expression ----
f_xyz <- expression(
  2 * x * y - 3 * x^2 * z^3)

# partial with respect x ----
df_dx <- D(expr = f_xyz, name = "x")


df_dx

df_dy <- D(expr = f_xyz, name)
```




